import{d as S,r as s}from"./vendor.Bh3_gxHF.js";const w=S("documents",()=>{const o=s([{id:"1",name:"Buyer Rep Agreement",type:"buyer-rep",buyerName:"Lucas Belmar",buyerEmail:"lucasbelmar@example.com",phoneNumber:"555-123-4567",propertyType:"Single Family Home",budgetRange:"$200,000-$500,000",description:"Standard buyer representation agreement outlining terms and conditions.",createdAt:"2024-03-15",clientId:1,files:[{id:"1",name:"BuyerRepAgreement-Final.pdf",type:"application/pdf",size:1572864}],agents:[{id:1,name:"Pristia Candra",email:"pristia@example.com",avatar:"https://res.cloudinary.com/dnuhjsckk/image/upload/v1746790261/300_e7yggy.jpg",experience:"3y experiences"}]},{id:"2",name:"Seller Rep Agreement",type:"seller-rep",sellerName:"Sarah Wilson",sellerEmail:"sarah.wilson@example.com",phoneNumber:"555-456-7890",propertyType:"Single Family Home",propertyAddress:"456 Elm Street, Columbia, CA 90001",listingPrice:"$750,000",description:"Seller representation agreement for property listing.",createdAt:"2024-03-14",clientId:2,files:[],agents:[]},{id:"3",name:"MLS Listing Agreement",type:"mls",propertyAddress:"123 Main Street, Columbia, CA 90001",listingPrice:"$895,000",bedrooms:"4",bathrooms:"3",squareFootage:"2,800",propertyDescription:"Beautiful single-family home with open floor plan, updated kitchen, and large backyard. Perfect for families looking for extra space and modern amenities.",description:"MLS listing agreement for 123 Main Street property.",createdAt:"2024-03-10",clientId:1,files:[{id:"3",name:"MLSListingAgreement.pdf",type:"application/pdf",size:2621440}],agents:[{id:5,name:"Sarah Johnson",email:"sarah.johnson@realestateagency.com",avatar:"https://res.cloudinary.com/dnuhjsckk/image/upload/v1746790261/300_1_gdilxy.jpg",experience:"10y experiences"}]},{id:"4",name:"Buyer Rep Agreement",type:"buyer-rep",buyerName:"Alex Dunia",buyerEmail:"alex.dunia@example.com",phoneNumber:"555-987-6543",propertyType:"Condo",budgetRange:"$300,000-$600,000",description:"Buyer representation agreement for new property search.",createdAt:"2024-03-12",clientId:1,files:[{id:"4",name:"BuyerRepAgreement.pdf",type:"application/pdf",size:33554432e-1}],agents:[{id:5,name:"Sarah Johnson",email:"sarah.johnson@realestateagency.com",avatar:"https://res.cloudinary.com/dnuhjsckk/image/upload/v1746790260/300_3_inul8p.jpg",experience:"10y experiences"}]},{id:"5",name:"Seller Rep Agreement",type:"seller-rep",sellerName:"Alex Dunia",sellerEmail:"alex.dunia@example.com",phoneNumber:"555-987-6543",propertyType:"Townhouse",propertyAddress:"456 Oak Avenue, Portland, OR 97205",listingPrice:"$625,000",description:"Seller representation agreement for property at 456 Oak Avenue.",createdAt:"2024-03-05",clientId:1,files:[{id:"6",name:"SellerRepAgreement.pdf",type:"application/pdf",size:838860.8}],agents:[]}]),a=s(!1),r=s(null),u=e=>{const t=typeof e=="number"?e.toString():e;return o.value.find(n=>n.id===t)},m=()=>o.value,c=e=>o.value.filter(t=>t.clientId===e);async function d(){a.value=!0,r.value=null;try{return await new Promise(e=>setTimeout(e,500)),console.log("Fetched documents from mock data"),o.value}catch(e){return console.error("Error fetching documents:",e),r.value=e.message||"Failed to fetch documents",[]}finally{a.value=!1}}async function p(e){a.value=!0,r.value=null;try{await new Promise(n=>setTimeout(n,300));const t=u(e);return console.log(`Fetched document ${e} from mock data`),t}catch(t){return console.error(`Error fetching document ${e}:`,t),r.value=t.message||"Failed to fetch document",null}finally{a.value=!1}}async function g(e){a.value=!0,r.value=null;try{await new Promise(n=>setTimeout(n,300));const t=c(e);return console.log(`Fetched documents for client ${e} from mock data`),t}catch(t){return console.error(`Error fetching documents for client ${e}:`,t),r.value=t.message||"Failed to fetch client documents",[]}finally{a.value=!1}}async function f(e){a.value=!0,r.value=null;try{const t=v(),n={id:t,createdAt:new Date().toISOString().split("T")[0],updatedAt:new Date().toISOString().split("T")[0],files:[],agents:[],...e};return await new Promise(l=>setTimeout(l,500)),o.value.push(n),console.log("Added document with mock implementation:",n),t}catch(t){throw console.error("Error creating document:",t),r.value=t.message||"Failed to create document",r.value}finally{a.value=!1}}async function y(e,t){a.value=!0,r.value=null;try{const n=typeof e=="number"?e.toString():e,l=o.value.findIndex(i=>i.id===n);return l!==-1?(await new Promise(i=>setTimeout(i,500)),o.value[l]={...o.value[l],...t,updatedAt:new Date().toISOString().split("T")[0]},console.log(`Updated document ${e} with mock implementation`),!0):!1}catch(n){return console.error(`Error updating document ${e}:`,n),r.value=n.message||"Failed to update document",!1}finally{a.value=!1}}async function h(e){a.value=!0,r.value=null;try{const t=typeof e=="number"?e.toString():e,n=o.value.findIndex(l=>l.id===t);return n!==-1?(await new Promise(l=>setTimeout(l,500)),o.value.splice(n,1),console.log(`Deleted document ${e} with mock implementation`),!0):!1}catch(t){return console.error(`Error deleting document ${e}:`,t),r.value=t.message||"Failed to delete document",!1}finally{a.value=!1}}function v(){const e=o.value.map(t=>parseInt(t.id)).filter(t=>!isNaN(t));return(Math.max(0,...e)+1).toString()}return{documents:o,loading:a,error:r,getDocument:u,getAllDocuments:m,getDocumentsByClientId:c,addDocument:f,updateDocument:y,deleteDocument:h,fetchDocuments:d,fetchDocument:p,fetchDocumentsByClientId:g}});export{w as u};
